@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями
 */
img {
  display: block;
  max-width: 100%;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
:root {
  --dark-color: #000;
  --accent-color: #ae8bf8;
  --light-color: #e3e3e3;
  --bg-color: #181619;
  --card-border-radius: 16px;
  --input-border-radius: 2px;
  --btn-border-radius: 2px;
  --font-main: monospace, sans-serif;
  --border-accent: 2px solid var(--accent-color);
  --box-shadow: 0px 0px 6px 2px var(--accent-color);
  --container-width: 1024px;
  --container-padding-x: 30px;
  --btn-padding: 6px 14px;
  --input-padding: 0 12px;
  --input-and-btn-height: 50px;
  --transition-duration: .4s;
  --animation-duration: 3s;
}

body {
  font-family: var(--font-main);
  font-weight: 600;
  font-size: 20px;
  background: linear-gradient(148deg, rgb(25, 25, 25) 0%, rgb(78, 58, 110) 100%);
  color: var(--light-color);
  position: relative;
}

* {
  transition-duration: var(--transition-duration);
}

a {
  color: var(--light-color);
  text-decoration: none;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.preloader {
  display: inline-flex;
  gap: 10px;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgb(24, 22, 25);
  justify-content: center;
  align-items: center;
  z-index: 9999;
}

.preloader:before,
.preloader:after {
  content: "";
  height: 30px;
  aspect-ratio: 1;
  border-radius: 50%;
  background: radial-gradient(farthest-side, #000 95%, rgba(0, 0, 0, 0)) 35% 35%/6px 6px no-repeat #fff;
  transform: scaleX(1) rotate(0deg);
  animation: eyeroll 1s infinite linear;
}

@keyframes eyeroll {
  100% {
    transform: scaleX(1) rotate(360deg);
  }
}
.gallery {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 50px;
}
.gallery__inner {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  row-gap: 40px;
  width: 100%;
}
.gallery__header {
  display: flex;
  justify-content: center;
  align-items: center;
  -moz-column-gap: 20px;
       column-gap: 20px;
}
.gallery__header__img {
  width: 150px;
  height: 150px;
  filter: drop-shadow(4px 4px 15px var(--accent-color));
}
@media (hover: hover) {
  .gallery__header__img:hover {
    scale: 1.05;
  }
}
@media (hover: none) {
  .gallery__header__img:active {
    scale: 1.05;
  }
}
@media (max-width: 595px) {
  .gallery__header {
    flex-direction: column;
  }
}
.gallery__title {
  font-size: 60px;
  letter-spacing: 0.3em;
  border-bottom: 6px dotted var(--accent-color);
}
@media (max-width: 595px) {
  .gallery__title {
    font-size: 50px;
  }
}
@media (max-width: 595px) {
  .gallery__navbar {
    display: flex;
    justify-content: center;
    align-items: center;
  }
}
.gallery__tabs {
  display: flex;
  justify-content: center;
  align-items: center;
  -moz-column-gap: 20px;
       column-gap: 20px;
  width: 100%;
}
@media (max-width: 595px) {
  .gallery__tabs {
    flex-direction: column;
    row-gap: 30px;
  }
}
.gallery__tab {
  max-width: 250px;
}
@media (hover: hover) {
  .gallery__tab:hover {
    transform: translateY(-5px);
  }
}
@media (hover: none) {
  .gallery__tab:active {
    transform: translateY(-5px);
  }
}
.gallery__link {
  display: block;
  padding: var(--btn-padding);
  border: 3px solid var(--light-color);
  cursor: pointer;
  outline: none;
}
@media (max-width: 595px) {
  .gallery__link {
    width: 250px;
    text-align: center;
  }
}
.gallery .active {
  transform: translateY(-5px);
  border: 3px solid transparent;
  box-shadow: var(--box-shadow);
}
.gallery .attribution {
  display: none;
}

.field {
  display: flex;
  justify-content: center;
  align-items: center;
  -moz-column-gap: 40px;
       column-gap: 40px;
  justify-content: space-between;
  width: 100%;
}
@media (max-width: 595px) {
  .field {
    flex-direction: column;
    row-gap: 20px;
  }
}
.field__input {
  width: 100%;
  height: var(--input-and-btn-height);
  border: 2px solid transparent;
  outline: none;
  border-radius: var(--input-border-radius);
  padding: var(--input-padding);
}
.field__input:focus {
  box-shadow: var(--box-shadow);
  background-color: transparent;
  color: var(--light-color);
}
.field__controls {
  display: flex;
  justify-content: center;
  align-items: center;
  -moz-column-gap: 10px;
       column-gap: 10px;
}
@media (max-width: 595px) {
  .field__controls {
    width: 100%;
  }
}

.preview {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
}
.preview-list {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 25px;
  width: 100%;
}
.preview__item {
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: var(--card-border-radius);
}
@media (hover: hover) {
  .preview__item:hover {
    transform: translateY(-10px);
  }
}
@media (hover: none) {
  .preview__item:active {
    transform: translateY(-10px);
  }
}
.preview__link {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
}
.preview__img {
  border-radius: var(--card-border-radius);
  width: 100%;
  height: 282px;
}

.btn {
  background-color: transparent;
  border: none;
  border-radius: var(--btn-border-radius);
  color: var(--accent-color);
}
@media (hover: hover) {
  .btn:not(.btn--input):hover {
    cursor: pointer;
    scale: 1.1;
  }
}
@media (hover: none) {
  .btn:not(.btn--input):active {
    cursor: pointer;
    scale: 1.1;
  }
}
.btn--input {
  width: var(--input-and-btn-height);
  height: var(--input-and-btn-height);
  padding: 10px;
  border: var(--border-accent);
  cursor: pointer;
}
.btn--input i {
  color: var(--light-color);
}
@media (hover: hover) {
  .btn--input:hover {
    opacity: 0.7;
  }
}
@media (hover: none) {
  .btn--input:active {
    opacity: 0.7;
  }
}
@media (max-width: 595px) {
  .btn--input {
    width: 100%;
  }
}
.btn--more {
  margin-bottom: 20px;
}

.error {
  display: none;
  width: 700px;
  height: 700px;
}
@media (max-width: 767px) {
  .error {
    width: 500px;
  }
}
@media (max-width: 595px) {
  .error {
    width: 350px;
  }
}

.anchor {
  position: absolute;
  bottom: 20px;
  left: 30px;
  width: 40px;
  height: 40px;
  background-color: rgba(170, 170, 170, 0.8);
  color: var(--bg-color);
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  display: none;
}
@media (hover: hover) {
  .anchor:hover {
    background-color: rgba(170, 170, 170, 0.4);
  }
}
@media (hover: none) {
  .anchor:active {
    background-color: rgba(170, 170, 170, 0.4);
  }
}

.random {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 700px;
  height: 450px;
}
@media (max-width: 767px) {
  .random {
    width: 500px;
    height: 300px;
  }
}
@media (max-width: 595px) {
  .random {
    width: 350px;
    height: 250px;
  }
}
.random__img {
  width: 100%;
  height: 100%;
}/*# sourceMappingURL=styles.css.map */